{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAgBhD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACP,mCACNC,EAFa,iDAEmCC,UAAUH,GAF7C,6BACP,oCADO,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IACpBC,EAAsBD,EAAtBC,GAAIC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OACnB,MAAO,CACLF,GAAIA,EACJC,MAAOA,EACPV,IAAG,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBZ,QAXf,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAA0B,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IACxC,OACE,sBAAKc,UAAU,2DAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACnBA,GAAS,4BAAIA,MAF+DD,ICAtEQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAACC,GACLH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGd,CAAEpB,IAEEqB,EDd2BK,CAAa1B,GAAjCa,EADyB,EAC/BN,KAAca,EADiB,EACjBA,QAEtB,OACE,qCACE,6BAAKpB,IACL,sBAAKgB,UAAU,YAAf,UACGI,GAAW,wCAEVP,EAAOJ,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,cEV3B,SAASgB,IAAgB,IAAD,EACOzC,mBAAS,CAAC,cADjB,mBACtBQ,EADsB,KACVT,EADU,KAG7B,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEIS,EAAWe,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,WCX1B4B,IAASC,OACL,cAACF,EAAD,IACFG,SAASC,eAAe,W","file":"static/js/main.db61c6c1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(inputValue.trim().length > 2) {\r\n      setCategories(categories => [inputValue, ...categories]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: propTypes.func.isRequired\r\n}\r\n","export const getGifs = async ( category ) => {\r\n    const API = 'BXT8ZERQxuAJ0nUGET0dFQlVYLr35fQr';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${API}`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n    \r\n    const gifs = data.map(img => {\r\n      const { id, title, images } = img;\r\n      return {\r\n        id: id,\r\n        title: title,\r\n        url: images?.downsized_medium.url\r\n      }\r\n    })\r\n    return gifs;\r\n  }","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce animate__delay-2s\" key={id}>\r\n      <img src={url} alt={title} />\r\n      {title && <p>{title}</p>}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      <div className=\"card-grid\">\r\n        {loading && <p>Loading</p>}\r\n        {\r\n          images.map( (img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then((imgs) => {\r\n        setstate({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      });\r\n  }, [ category ]);\r\n\r\n  return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport function GifExpertApp() {\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map((category) =>\r\n            <GifGrid key={category} category={category} />\r\n          )\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}